task printsubject() {
    project.subprojects.each {print(it.name)}
}
subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }

    dependencies {
        implementation libraries.slf4j

        testImplementation libraries.jupiter
    }

    if ("${project.name}".endsWith("application")) {

        task release(type: Zip) {
            dependsOn build
            destinationDirectory = file("${buildDir}/release")
            into("libs") {
                from configurations.compileClasspath
                from("${buildDir}/libs") {
                    include("*.jar")
                }
            }

            into("config") {
                from "${buildDir}/resources/main"

            }
            into("bin") {
                fileMode(0755)
                from("bin")
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}